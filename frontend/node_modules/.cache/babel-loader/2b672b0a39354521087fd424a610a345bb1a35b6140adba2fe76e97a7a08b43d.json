{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0443\\u0440\\u043E\\u043A\\u0438 programming\\\\24\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Suspense } from 'react';\nimport { useRouteLoaderData, json, redirect, defer, Await } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport EventsList from '../components/EventsList';\nimport { getAuthToken } from '../util/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 24\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 24\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: await loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const token = getAuthToken();\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Suspense","useRouteLoaderData","json","redirect","defer","Await","EventItem","EventsList","getAuthToken","jsxDEV","_jsxDEV","EventDetailPage","_s","event","events","React","Fragment","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","request","params","eventId","action","token","method","$RefreshReg$"],"sources":["D:/уроки programming/24/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Suspense } from 'react';\nimport { useRouteLoaderData, json, redirect, defer, Await } from 'react-router-dom';\n\nimport EventItem from '../components/EventItem';\nimport EventsList from '../components/EventsList';\nimport { getAuthToken } from '../util/auth';\n\nfunction EventDetailPage() {\n\tconst { event, events } = useRouteLoaderData('event-detail');\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...</p>}>\n\t\t\t\t<Await resolve={event}>{(loadedEvent) => <EventItem event={loadedEvent} />}</Await>\n\t\t\t</Suspense>\n\t\t\t<Suspense fallback={<p style={{ textAlign: 'center' }}>Loading...</p>}>\n\t\t\t\t<Await resolve={events}>{(loadedEvents) => <EventsList events={loadedEvents} />}</Await>\n\t\t\t</Suspense>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default EventDetailPage;\n\nasync function loadEvent(id) {\n\tconst response = await fetch('http://localhost:8080/events/' + id);\n\n\tif (!response.ok) {\n\t\tthrow json(\n\t\t\t{ message: 'Could not fetch details for selected event.' },\n\t\t\t{\n\t\t\t\tstatus: 500\n\t\t\t}\n\t\t);\n\t} else {\n\t\tconst resData = await response.json();\n\t\treturn resData.event;\n\t}\n}\n\nasync function loadEvents() {\n\tconst response = await fetch('http://localhost:8080/events');\n\n\tif (!response.ok) {\n\t\t// return { isError: true, message: 'Could not fetch events.' };\n\t\t// throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n\t\t//   status: 500,\n\t\t// });\n\t\tthrow json(\n\t\t\t{ message: 'Could not fetch events.' },\n\t\t\t{\n\t\t\t\tstatus: 500\n\t\t\t}\n\t\t);\n\t} else {\n\t\tconst resData = await response.json();\n\t\treturn resData.events;\n\t}\n}\n\nexport async function loader({ request, params }) {\n\tconst id = params.eventId;\n\n\treturn defer({\n\t\tevent: await loadEvent(id),\n\t\tevents: loadEvents()\n\t});\n}\n\nexport async function action({ params, request }) {\n\tconst eventId = params.eventId;\n\tconst token = getAuthToken();\n\tconst response = await fetch('http://localhost:8080/events/' + eventId, {\n\t\tmethod: request.method\n\t});\n\n\tif (!response.ok) {\n\t\tthrow json(\n\t\t\t{ message: 'Could not delete event.' },\n\t\t\t{\n\t\t\t\tstatus: 500\n\t\t\t}\n\t\t);\n\t}\n\treturn redirect('/events');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}